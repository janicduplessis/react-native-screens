{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNativeScreens","_reactNavigation","_reactNavigationStack","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","REMOVE_ACTION","isAndroid","Platform","OS","didWarn","renderComponentOrThunk","componentOrThunk","props","removeScene","route","dismissCount","navigation","dispatch","type","immediate","onAppear","descriptor","_descriptor$options","_descriptor$options$o","options","StackActions","completeTransition","toChildKey","state","onFinishTransitioning","routes","lastRoute","renderHeaderConfig","index","navigationConfig","headerMode","backButtonInCustomView","direction","disableBackButtonMenu","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerHideBackButton","headerHideShadow","headerLargeStyle","headerLargeTitle","headerLargeTitleHideShadow","headerLargeTitleStyle","headerShown","headerStyle","headerTintColor","headerTitleStyle","headerTopInsetEnabled","headerTranslucent","hideShadow","largeTitle","largeTitleHideShadow","title","translucent","scene","headerOptions","backTitle","backTitleFontFamily","fontFamily","backTitleFontSize","fontSize","backTitleVisible","color","topInsetEnabled","hideBackButton","largeTitleBackgroundColor","backgroundColor","largeTitleColor","largeTitleFontFamily","largeTitleFontSize","largeTitleFontWeight","fontWeight","titleColor","titleFontFamily","titleFontSize","titleFontWeight","hasHeader","header","createElement","ScreenStackHeaderConfig","hidden","undefined","blurEffect","children","backButtonImage","push","ScreenStackHeaderBackButtonImage","searchBar","ScreenStackHeaderSearchBarView","SearchBar","headerLeft","ScreenStackHeaderLeftView","headerBackImage","goBack","requestAnimationFrame","HeaderBackButton","onPress","pressColorAndroid","headerPressColorAndroid","tintColor","backImage","label","backButtonTitle","truncatedLabel","truncatedBackButtonTitle","labelVisible","labelStyle","titleLayout","layoutPreset","truncatedTitle","titleStyle","headerTitle","ScreenStackHeaderCenterView","headerRight","ScreenStackHeaderRightView","MaybeNestedStack","_ref","isHeaderInModal","screenProps","SceneComponent","Screen","React","useContext","ScreenContext","ScreenStack","style","styles","scenes","StyleSheet","absoluteFill","enabled","isNativeStack","SceneView","component","StackView","_ref2","descriptors","map","getComponent","routeNavigationProp","mode","transparentCard","stackPresentation","cardTransparent","stackAnimation","animationEnabled","console","warn","isHeaderInPush","cardStyle","customAnimationOnSwipe","replaceAnimation","pointerEvents","gestureEnabled","nativeBackButtonDismissalEnabled","fullScreenSwipeEnabled","screenOrientation","statusBarAnimation","statusBarColor","statusBarHidden","statusBarStyle","statusBarTranslucent","onWillAppear","_options$onWillAppear","onWillDisappear","_options$onWillDisapp","onDisappear","_options$onDisappear","onHeaderBackButtonClicked","onDismissed","e","nativeEvent","create","flex","createStackNavigator","routeConfigMap","stackConfig","router","StackRouter","superGetStateForAction","getStateForAction","action","backRouteIndex","backRoute","find","indexOf","newRoutes","splice","isTransitioning","createNavigator","_default","exports"],"sources":["createNativeStackNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  Animated,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ScreenContext,\n  ScreenStack,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderConfigProps,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport {\n  createNavigator,\n  SceneView,\n  StackActions,\n  StackRouter,\n  NavigationRouteConfigMap,\n  CreateNavigatorConfig,\n  NavigationStackRouterConfig,\n  NavigationParams,\n  NavigationRoute,\n  NavigationDescriptor,\n  NavigationState,\n  NavigationNavigator,\n  NavigationAction,\n  NavigationProp,\n  NavigationScreenProp,\n} from 'react-navigation';\nimport { NativeStackNavigationOptions as NativeStackNavigationOptionsV5 } from './native-stack/types';\nimport { HeaderBackButton } from 'react-navigation-stack';\nimport {\n  StackNavigationHelpers,\n  StackNavigationProp,\n  Layout,\n} from 'react-navigation-stack/src/vendor/types';\n\nconst REMOVE_ACTION = 'NativeStackNavigator/REMOVE';\n\nconst isAndroid = Platform.OS === 'android';\n\nlet didWarn = isAndroid;\n\nfunction renderComponentOrThunk(componentOrThunk: unknown, props: unknown) {\n  if (typeof componentOrThunk === 'function') {\n    return componentOrThunk(props);\n  }\n  return componentOrThunk;\n}\n\ntype NativeStackRemoveNavigationAction = {\n  type: typeof REMOVE_ACTION;\n  immediate: boolean;\n  dismissCount: number;\n  key?: string;\n};\n\nexport type NativeStackNavigationProp = StackNavigationProp;\n\nexport type NativeStackNavigationOptions = StackNavigatorOptions &\n  NativeStackNavigationOptionsV5 &\n  BackButtonProps & {\n    onWillAppear?: () => void;\n    onAppear?: () => void;\n    onWillDisappear?: () => void;\n    onDisappear?: () => void;\n    // these props differ from the ones used in v5 `native-stack`, and we would like to keep the API consistent between versions\n    /** Use `headerHideShadow` to be consistent with v5 `native-stack` */\n    hideShadow?: boolean;\n    /** Use `headerLargeTitle` to be consistent with v5 `native-stack` */\n    largeTitle?: boolean;\n    /** Use `headerLargeTitleHideShadow` to be consistent with v5 `native-stack` */\n    largeTitleHideShadow?: boolean;\n    /** Use `headerTranslucent` to be consistent with v5 `native-stack` */\n    translucent?: boolean;\n  };\n\n// these are adopted from `stack` navigator\ntype StackNavigatorOptions = {\n  /** This is an option from `stackNavigator` and it hides the header when set to `null`. Use `headerShown` instead to be consistent with v5 `native-stack`. */\n  header?: React.ComponentType<Record<string, unknown>> | null;\n  /** This is an option from `stackNavigator` and it controls the stack presentation along with `mode` prop. Use `stackPresentation` instead to be consistent with v5 `native-stack` */\n  cardTransparent?: boolean;\n  /** This is an option from `stackNavigator` and it sets stack animation to none when `false` passed. Use `stackAnimation: 'none'` instead to be consistent with v5 `native-stack` */\n  animationEnabled?: boolean;\n  cardStyle?: StyleProp<ViewStyle>;\n};\n\n// these are the props used for rendering back button taken from `react-navigation-stack`\ntype BackButtonProps = {\n  headerBackImage?: (props: { tintColor: string }) => React.ReactNode;\n  headerPressColorAndroid?: string;\n  headerTintColor?: string;\n  backButtonTitle?: string;\n  truncatedBackButtonTitle?: string;\n  backTitleVisible?: boolean;\n  headerBackTitleStyle?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n  layoutPreset?: Layout;\n};\n\ntype NativeStackDescriptor = NavigationDescriptor<\n  NavigationParams,\n  NativeStackNavigationOptions\n>;\n\ntype NativeStackDescriptorMap = {\n  [key: string]: NativeStackDescriptor;\n};\n\n// these are the props used for rendering back button taken from `react-navigation-stack`\ntype NativeStackNavigationConfig = {\n  /** This is an option from `stackNavigator` and controls the stack presentation along with `cardTransparent` prop. Use `stackPresentation` instead to be consistent with v5 `native-stack` */\n  mode?: 'modal' | 'containedModal';\n  /** This is an option from `stackNavigator` and makes the header hide when set to `none`. Use `headerShown` instead to be consistent with v5 `native-stack` */\n  headerMode?: 'none';\n  /** This is an option from `stackNavigator` and controls the stack presentation along with `mode` prop. Use `stackPresentation` instead to be consistent with v5 `native-stack` */\n  transparentCard?: boolean;\n};\n\nfunction removeScene(\n  route: NavigationRoute<NavigationParams>,\n  dismissCount: number,\n  navigation: StackNavigationHelpers\n) {\n  navigation.dispatch({\n    // @ts-ignore special navigation action for native stack\n    type: REMOVE_ACTION,\n    immediate: true,\n    key: route.key,\n    dismissCount,\n  });\n}\n\nfunction onAppear(\n  route: NavigationRoute<NavigationParams>,\n  descriptor: NativeStackDescriptor,\n  navigation: StackNavigationHelpers\n) {\n  descriptor.options?.onAppear?.();\n  navigation.dispatch(\n    StackActions.completeTransition({\n      toChildKey: route.key,\n      key: navigation.state.key,\n    })\n  );\n}\n\nfunction onFinishTransitioning(navigation: StackNavigationHelpers) {\n  const { routes } = navigation.state;\n  const lastRoute = routes?.length && routes[routes.length - 1];\n\n  if (lastRoute) {\n    navigation.dispatch(\n      StackActions.completeTransition({\n        toChildKey: lastRoute.key,\n        key: navigation.state.key,\n      })\n    );\n  }\n}\n\nfunction renderHeaderConfig(\n  index: number,\n  route: NavigationRoute<NavigationParams>,\n  descriptor: NativeStackDescriptor,\n  navigationConfig: NativeStackNavigationConfig\n) {\n  const { options } = descriptor;\n  const { headerMode } = navigationConfig;\n\n  const {\n    backButtonInCustomView,\n    direction,\n    disableBackButtonMenu,\n    headerBackTitle,\n    headerBackTitleStyle,\n    headerBackTitleVisible,\n    headerHideBackButton,\n    headerHideShadow,\n    headerLargeStyle,\n    headerLargeTitle,\n    headerLargeTitleHideShadow,\n    headerLargeTitleStyle,\n    headerShown,\n    headerStyle,\n    headerTintColor,\n    headerTitleStyle,\n    headerTopInsetEnabled = true,\n    headerTranslucent,\n    hideShadow,\n    largeTitle,\n    largeTitleHideShadow,\n    title,\n    translucent,\n  } = options;\n\n  const scene = {\n    index,\n    key: route.key,\n    route,\n    descriptor,\n  };\n\n  const headerOptions: ScreenStackHeaderConfigProps = {\n    backButtonInCustomView,\n    backTitle: headerBackTitle,\n    backTitleFontFamily: headerBackTitleStyle?.fontFamily,\n    backTitleFontSize: headerBackTitleStyle?.fontSize,\n    backTitleVisible: headerBackTitleVisible,\n    color: headerTintColor,\n    direction,\n    disableBackButtonMenu,\n    topInsetEnabled: headerTopInsetEnabled,\n    hideBackButton: headerHideBackButton,\n    hideShadow: headerHideShadow || hideShadow,\n    largeTitle: headerLargeTitle || largeTitle,\n    largeTitleBackgroundColor:\n      headerLargeStyle?.backgroundColor ||\n      // @ts-ignore old implementation, will not be present in TS API, but can be used here\n      headerLargeTitleStyle?.backgroundColor,\n    largeTitleColor: headerLargeTitleStyle?.color,\n    largeTitleFontFamily: headerLargeTitleStyle?.fontFamily,\n    largeTitleFontSize: headerLargeTitleStyle?.fontSize,\n    largeTitleFontWeight: headerLargeTitleStyle?.fontWeight,\n    largeTitleHideShadow: largeTitleHideShadow || headerLargeTitleHideShadow,\n    title,\n    titleColor: headerTitleStyle?.color || headerTintColor,\n    titleFontFamily: headerTitleStyle?.fontFamily,\n    titleFontSize: headerTitleStyle?.fontSize,\n    titleFontWeight: headerTitleStyle?.fontWeight,\n    translucent: headerTranslucent || translucent || false,\n  };\n\n  const hasHeader =\n    headerShown !== false && headerMode !== 'none' && options.header !== null;\n  if (!hasHeader) {\n    return <ScreenStackHeaderConfig {...headerOptions} hidden />;\n  }\n\n  if (headerStyle !== undefined) {\n    headerOptions.backgroundColor = headerStyle.backgroundColor;\n    headerOptions.blurEffect = headerStyle.blurEffect;\n  }\n\n  const children = [];\n\n  if (options.backButtonImage) {\n    children.push(\n      <ScreenStackHeaderBackButtonImage\n        key=\"backImage\"\n        source={options.backButtonImage}\n      />\n    );\n  }\n\n  if (Platform.OS === 'ios' && options.searchBar) {\n    children.push(\n      <ScreenStackHeaderSearchBarView>\n        <SearchBar {...options.searchBar} />\n      </ScreenStackHeaderSearchBarView>\n    );\n  }\n\n  if (options.headerLeft !== undefined) {\n    children.push(\n      <ScreenStackHeaderLeftView key=\"left\">\n        {renderComponentOrThunk(options.headerLeft, { scene })}\n      </ScreenStackHeaderLeftView>\n    );\n  } else if (options.headerBackImage !== undefined) {\n    const goBack = () => {\n      // Go back on next tick because button ripple effect needs to happen on Android\n      requestAnimationFrame(() => {\n        descriptor.navigation.goBack(descriptor.key);\n      });\n    };\n\n    children.push(\n      <ScreenStackHeaderLeftView key=\"left\">\n        <HeaderBackButton\n          onPress={goBack}\n          pressColorAndroid={options.headerPressColorAndroid}\n          tintColor={options.headerTintColor}\n          backImage={options.headerBackImage}\n          label={options.backButtonTitle}\n          truncatedLabel={options.truncatedBackButtonTitle}\n          labelVisible={options.backTitleVisible}\n          labelStyle={options.headerBackTitleStyle}\n          titleLayout={options.layoutPreset}\n          // @ts-ignore old props kept for very old version of `react-navigation-stack`\n          title={options.backButtonTitle}\n          truncatedTitle={options.truncatedBackButtonTitle}\n          backTitleVisible={options.backTitleVisible}\n          titleStyle={options.headerBackTitleStyle}\n          layoutPreset={options.layoutPreset}\n          scene={scene}\n        />\n      </ScreenStackHeaderLeftView>\n    );\n  }\n\n  if (options.headerTitle) {\n    if (title === undefined && typeof options.headerTitle === 'string') {\n      headerOptions.title = options.headerTitle;\n    } else {\n      children.push(\n        <ScreenStackHeaderCenterView key=\"center\">\n          {renderComponentOrThunk(options.headerTitle, { scene })}\n        </ScreenStackHeaderCenterView>\n      );\n    }\n  }\n\n  if (options.headerRight) {\n    children.push(\n      <ScreenStackHeaderRightView key=\"right\">\n        {renderComponentOrThunk(options.headerRight, { scene })}\n      </ScreenStackHeaderRightView>\n    );\n  }\n\n  if (children.length > 0) {\n    headerOptions.children = children;\n  }\n\n  return <ScreenStackHeaderConfig {...headerOptions} />;\n}\n\nconst MaybeNestedStack = ({\n  isHeaderInModal,\n  screenProps,\n  route,\n  navigation,\n  SceneComponent,\n  index,\n  descriptor,\n  navigationConfig,\n}: {\n  isHeaderInModal: boolean;\n  screenProps: unknown;\n  route: NavigationRoute<NavigationParams>;\n  navigation: NavigationScreenProp<\n    NavigationRoute<NavigationParams>,\n    NavigationParams\n  >;\n  SceneComponent: React.ComponentType<Record<string, unknown>>;\n  index: number;\n  descriptor: NativeStackDescriptor;\n  navigationConfig: NativeStackNavigationConfig;\n}) => {\n  const Screen = React.useContext(ScreenContext);\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.scenes}>\n        <Screen style={StyleSheet.absoluteFill} enabled isNativeStack>\n          {renderHeaderConfig(index, route, descriptor, navigationConfig)}\n          <SceneView\n            screenProps={screenProps}\n            navigation={navigation}\n            component={SceneComponent}\n          />\n        </Screen>\n      </ScreenStack>\n    );\n  }\n  return (\n    <SceneView\n      screenProps={screenProps}\n      navigation={navigation}\n      component={SceneComponent}\n    />\n  );\n};\n\ntype StackViewProps = {\n  navigation: StackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n  navigationConfig: NativeStackNavigationConfig;\n  screenProps: unknown;\n};\n\nfunction StackView({\n  navigation,\n  descriptors,\n  navigationConfig,\n  screenProps,\n}: StackViewProps) {\n  const { routes } = navigation.state;\n  const Screen = React.useContext(ScreenContext);\n  return (\n    <ScreenStack\n      style={styles.scenes}\n      onFinishTransitioning={() => onFinishTransitioning(navigation)}\n    >\n      {routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const { getComponent, options } = descriptor;\n        const routeNavigationProp = descriptor.navigation;\n        const { mode, transparentCard } = navigationConfig;\n        const SceneComponent = getComponent();\n\n        let stackPresentation: StackPresentationTypes = 'push';\n\n        if (options.stackPresentation) {\n          stackPresentation = options.stackPresentation;\n        } else {\n          // this shouldn't be used because we have a prop for that\n          if (mode === 'modal' || mode === 'containedModal') {\n            stackPresentation = mode;\n            if (transparentCard || options.cardTransparent) {\n              stackPresentation =\n                mode === 'containedModal'\n                  ? 'containedTransparentModal'\n                  : 'transparentModal';\n            }\n          }\n        }\n        let stackAnimation = options.stackAnimation;\n        if (options.animationEnabled === false) {\n          stackAnimation = 'none';\n        }\n\n        const hasHeader =\n          options.headerShown !== false &&\n          navigationConfig?.headerMode !== 'none' &&\n          options.header !== null;\n\n        if (\n          !didWarn &&\n          stackPresentation !== 'push' &&\n          options.headerShown !== undefined\n        ) {\n          didWarn = true;\n          console.warn(\n            'Be aware that changing the visibility of header in modal on iOS will result in resetting the state of the screen.'\n          );\n        }\n\n        const isHeaderInModal = isAndroid\n          ? false\n          : stackPresentation !== 'push' &&\n            hasHeader &&\n            options.headerShown === true;\n        const isHeaderInPush = isAndroid\n          ? hasHeader\n          : stackPresentation === 'push' && hasHeader;\n\n        return (\n          <Screen\n            key={`screen_${route.key}`}\n            enabled\n            isNativeStack\n            style={[StyleSheet.absoluteFill, options.cardStyle]}\n            stackAnimation={stackAnimation}\n            customAnimationOnSwipe={options.customAnimationOnSwipe}\n            stackPresentation={stackPresentation}\n            replaceAnimation={\n              options.replaceAnimation === undefined\n                ? 'pop'\n                : options.replaceAnimation\n            }\n            pointerEvents={\n              index === navigation.state.routes.length - 1 ? 'auto' : 'none'\n            }\n            gestureEnabled={\n              Platform.OS === 'android'\n                ? false\n                : options.gestureEnabled === undefined\n                ? true\n                : options.gestureEnabled\n            }\n            nativeBackButtonDismissalEnabled={\n              options.nativeBackButtonDismissalEnabled\n            }\n            fullScreenSwipeEnabled={options.fullScreenSwipeEnabled}\n            screenOrientation={options.screenOrientation}\n            statusBarAnimation={options.statusBarAnimation}\n            statusBarColor={options.statusBarColor}\n            statusBarHidden={options.statusBarHidden}\n            statusBarStyle={options.statusBarStyle}\n            statusBarTranslucent={options.statusBarTranslucent}\n            onAppear={() => onAppear(route, descriptor, routeNavigationProp)}\n            onWillAppear={() => options?.onWillAppear?.()}\n            onWillDisappear={() => options?.onWillDisappear?.()}\n            onDisappear={() => options?.onDisappear?.()}\n            onHeaderBackButtonClicked={() =>\n              removeScene(route, 1, routeNavigationProp)\n            }\n            onDismissed={(e) =>\n              removeScene(\n                route,\n                e.nativeEvent.dismissCount,\n                routeNavigationProp\n              )\n            }\n          >\n            {isHeaderInPush &&\n              renderHeaderConfig(index, route, descriptor, navigationConfig)}\n            <MaybeNestedStack\n              isHeaderInModal={isHeaderInModal}\n              screenProps={screenProps}\n              route={route}\n              navigation={routeNavigationProp}\n              SceneComponent={SceneComponent}\n              index={index}\n              descriptor={descriptor}\n              navigationConfig={navigationConfig}\n            />\n          </Screen>\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nconst styles = StyleSheet.create({\n  scenes: { flex: 1 },\n});\n\nfunction createStackNavigator(\n  routeConfigMap: NavigationRouteConfigMap<\n    NativeStackNavigationOptions,\n    StackNavigationProp\n  >,\n  stackConfig: CreateNavigatorConfig<\n    NativeStackNavigationConfig,\n    NavigationStackRouterConfig,\n    NativeStackNavigationOptions,\n    StackNavigationProp\n  > = {}\n): NavigationNavigator<\n  Record<string, unknown>,\n  NavigationProp<NavigationState>\n> {\n  const router = StackRouter(routeConfigMap, stackConfig);\n\n  // below we override getStateForAction method in order to add handling for\n  // a custom native stack navigation action. The action REMOVE that we want to\n  // add works in a similar way to POP, but it does not remove all the routes\n  // that sit on top of the removed route. For example if we have three routes\n  // [a,b,c] and call POP on b, then both b and c will go away. In case we\n  // call REMOVE on b, only b will be removed from the stack and the resulting\n  // state will be [a, c]\n  const superGetStateForAction = router.getStateForAction;\n  router.getStateForAction = (\n    action: NavigationAction | NativeStackRemoveNavigationAction,\n    state\n  ) => {\n    if (action.type === REMOVE_ACTION) {\n      const { key, immediate, dismissCount } = action;\n      let backRouteIndex = state.index;\n      if (key) {\n        const backRoute = state.routes.find(\n          (route: NavigationRoute<NavigationParams>) => route.key === key\n        );\n        backRouteIndex = state.routes.indexOf(backRoute);\n      }\n\n      if (backRouteIndex > 0) {\n        const newRoutes = [...state.routes];\n        if (dismissCount > 1) {\n          // when dismissing with iOS 14 native header back button, we can pop more than 1 screen at a time\n          // and the `backRouteIndex` is the index of the previous screen. Since we are starting already\n          // on the previous screen, we add 1 to start.\n          newRoutes.splice(backRouteIndex - dismissCount + 1, dismissCount);\n        } else {\n          newRoutes.splice(backRouteIndex, 1);\n        }\n\n        return {\n          ...state,\n          routes: newRoutes,\n          index: newRoutes.length - 1,\n          isTransitioning: immediate !== true,\n        };\n      }\n    }\n    return superGetStateForAction(action as NavigationAction, state);\n  };\n  // Create a navigator with StackView as the view\n  return createNavigator(StackView, router, stackConfig);\n}\n\nexport default createStackNavigator;\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAQA,IAAAE,mBAAA,GAAAF,OAAA;AAaA,IAAAG,gBAAA,GAAAH,OAAA;AAkBA,IAAAI,qBAAA,GAAAJ,OAAA;AAA0D,SAAAD,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,SAAA,IAAAA,QAAA,GAAAC,MAAA,CAAAC,MAAA,GAAAD,MAAA,CAAAC,MAAA,CAAAC,IAAA,eAAAC,MAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA,UAAAG,MAAA,GAAAF,SAAA,CAAAD,CAAA,YAAAI,GAAA,IAAAD,MAAA,QAAAP,MAAA,CAAAS,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAJ,MAAA,EAAAC,GAAA,KAAAL,MAAA,CAAAK,GAAA,IAAAD,MAAA,CAAAC,GAAA,gBAAAL,MAAA,YAAAJ,QAAA,CAAAa,KAAA,OAAAP,SAAA;AAO1D,MAAMQ,aAAa,GAAG,6BAA6B;AAEnD,MAAMC,SAAS,GAAGC,qBAAQ,CAACC,EAAE,KAAK,SAAS;AAE3C,IAAIC,OAAO,GAAGH,SAAS;AAEvB,SAASI,sBAAsBA,CAACC,gBAAyB,EAAEC,KAAc,EAAE;EACzE,IAAI,OAAOD,gBAAgB,KAAK,UAAU,EAAE;IAC1C,OAAOA,gBAAgB,CAACC,KAAK,CAAC;EAChC;EACA,OAAOD,gBAAgB;AACzB;AAuEA,SAASE,WAAWA,CAClBC,KAAwC,EACxCC,YAAoB,EACpBC,UAAkC,EAClC;EACAA,UAAU,CAACC,QAAQ,CAAC;IAClB;IACAC,IAAI,EAAEb,aAAa;IACnBc,SAAS,EAAE,IAAI;IACfnB,GAAG,EAAEc,KAAK,CAACd,GAAG;IACde;EACF,CAAC,CAAC;AACJ;AAEA,SAASK,QAAQA,CACfN,KAAwC,EACxCO,UAAiC,EACjCL,UAAkC,EAClC;EAAA,IAAAM,mBAAA,EAAAC,qBAAA;EACA,CAAAD,mBAAA,GAAAD,UAAU,CAACG,OAAO,cAAAF,mBAAA,wBAAAC,qBAAA,GAAlBD,mBAAA,CAAoBF,QAAQ,cAAAG,qBAAA,uBAA5BA,qBAAA,CAAApB,IAAA,CAAAmB,mBAAA,CAAgC;EAChCN,UAAU,CAACC,QAAQ,CACjBQ,6BAAY,CAACC,kBAAkB,CAAC;IAC9BC,UAAU,EAAEb,KAAK,CAACd,GAAG;IACrBA,GAAG,EAAEgB,UAAU,CAACY,KAAK,CAAC5B;EACxB,CAAC,CAAC,CACH;AACH;AAEA,SAAS6B,qBAAqBA,CAACb,UAAkC,EAAE;EACjE,MAAM;IAAEc;EAAO,CAAC,GAAGd,UAAU,CAACY,KAAK;EACnC,MAAMG,SAAS,GAAG,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEhC,MAAM,KAAIgC,MAAM,CAACA,MAAM,CAAChC,MAAM,GAAG,CAAC,CAAC;EAE7D,IAAIiC,SAAS,EAAE;IACbf,UAAU,CAACC,QAAQ,CACjBQ,6BAAY,CAACC,kBAAkB,CAAC;MAC9BC,UAAU,EAAEI,SAAS,CAAC/B,GAAG;MACzBA,GAAG,EAAEgB,UAAU,CAACY,KAAK,CAAC5B;IACxB,CAAC,CAAC,CACH;EACH;AACF;AAEA,SAASgC,kBAAkBA,CACzBC,KAAa,EACbnB,KAAwC,EACxCO,UAAiC,EACjCa,gBAA6C,EAC7C;EACA,MAAM;IAAEV;EAAQ,CAAC,GAAGH,UAAU;EAC9B,MAAM;IAAEc;EAAW,CAAC,GAAGD,gBAAgB;EAEvC,MAAM;IACJE,sBAAsB;IACtBC,SAAS;IACTC,qBAAqB;IACrBC,eAAe;IACfC,oBAAoB;IACpBC,sBAAsB;IACtBC,oBAAoB;IACpBC,gBAAgB;IAChBC,gBAAgB;IAChBC,gBAAgB;IAChBC,0BAA0B;IAC1BC,qBAAqB;IACrBC,WAAW;IACXC,WAAW;IACXC,eAAe;IACfC,gBAAgB;IAChBC,qBAAqB,GAAG,IAAI;IAC5BC,iBAAiB;IACjBC,UAAU;IACVC,UAAU;IACVC,oBAAoB;IACpBC,KAAK;IACLC;EACF,CAAC,GAAGlC,OAAO;EAEX,MAAMmC,KAAK,GAAG;IACZ1B,KAAK;IACLjC,GAAG,EAAEc,KAAK,CAACd,GAAG;IACdc,KAAK;IACLO;EACF,CAAC;EAED,MAAMuC,aAA2C,GAAG;IAClDxB,sBAAsB;IACtByB,SAAS,EAAEtB,eAAe;IAC1BuB,mBAAmB,EAAEtB,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAEuB,UAAU;IACrDC,iBAAiB,EAAExB,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAEyB,QAAQ;IACjDC,gBAAgB,EAAEzB,sBAAsB;IACxC0B,KAAK,EAAEjB,eAAe;IACtBb,SAAS;IACTC,qBAAqB;IACrB8B,eAAe,EAAEhB,qBAAqB;IACtCiB,cAAc,EAAE3B,oBAAoB;IACpCY,UAAU,EAAEX,gBAAgB,IAAIW,UAAU;IAC1CC,UAAU,EAAEV,gBAAgB,IAAIU,UAAU;IAC1Ce,yBAAyB,EACvB,CAAA1B,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAE2B,eAAe,OACjC;IACAxB,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEwB,eAAe;IACxCC,eAAe,EAAEzB,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEoB,KAAK;IAC7CM,oBAAoB,EAAE1B,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEgB,UAAU;IACvDW,kBAAkB,EAAE3B,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEkB,QAAQ;IACnDU,oBAAoB,EAAE5B,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAE6B,UAAU;IACvDpB,oBAAoB,EAAEA,oBAAoB,IAAIV,0BAA0B;IACxEW,KAAK;IACLoB,UAAU,EAAE,CAAA1B,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEgB,KAAK,KAAIjB,eAAe;IACtD4B,eAAe,EAAE3B,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEY,UAAU;IAC7CgB,aAAa,EAAE5B,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEc,QAAQ;IACzCe,eAAe,EAAE7B,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEyB,UAAU;IAC7ClB,WAAW,EAAEL,iBAAiB,IAAIK,WAAW,IAAI;EACnD,CAAC;EAED,MAAMuB,SAAS,GACbjC,WAAW,KAAK,KAAK,IAAIb,UAAU,KAAK,MAAM,IAAIX,OAAO,CAAC0D,MAAM,KAAK,IAAI;EAC3E,IAAI,CAACD,SAAS,EAAE;IACd,oBAAOpG,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAClG,mBAAA,CAAAmG,uBAAuB,EAAA7F,QAAA,KAAKqE,aAAa;MAAEyB,MAAM;IAAA,GAAG;EAC9D;EAEA,IAAIpC,WAAW,KAAKqC,SAAS,EAAE;IAC7B1B,aAAa,CAACW,eAAe,GAAGtB,WAAW,CAACsB,eAAe;IAC3DX,aAAa,CAAC2B,UAAU,GAAGtC,WAAW,CAACsC,UAAU;EACnD;EAEA,MAAMC,QAAQ,GAAG,EAAE;EAEnB,IAAIhE,OAAO,CAACiE,eAAe,EAAE;IAC3BD,QAAQ,CAACE,IAAI,eACX7G,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAClG,mBAAA,CAAA0G,gCAAgC;MAC/B3F,GAAG,EAAC,WAAW;MACfD,MAAM,EAAEyB,OAAO,CAACiE;IAAgB,EAChC,CACH;EACH;EAEA,IAAIlF,qBAAQ,CAACC,EAAE,KAAK,KAAK,IAAIgB,OAAO,CAACoE,SAAS,EAAE;IAC9CJ,QAAQ,CAACE,IAAI,eACX7G,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAClG,mBAAA,CAAA4G,8BAA8B,qBAC7BhH,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAClG,mBAAA,CAAA6G,SAAS,EAAKtE,OAAO,CAACoE,SAAS,CAAI,CACL,CAClC;EACH;EAEA,IAAIpE,OAAO,CAACuE,UAAU,KAAKT,SAAS,EAAE;IACpCE,QAAQ,CAACE,IAAI,eACX7G,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAClG,mBAAA,CAAA+G,yBAAyB;MAAChG,GAAG,EAAC;IAAM,GAClCU,sBAAsB,CAACc,OAAO,CAACuE,UAAU,EAAE;MAAEpC;IAAM,CAAC,CAAC,CAC5B,CAC7B;EACH,CAAC,MAAM,IAAInC,OAAO,CAACyE,eAAe,KAAKX,SAAS,EAAE;IAChD,MAAMY,MAAM,GAAGA,CAAA,KAAM;MACnB;MACAC,qBAAqB,CAAC,MAAM;QAC1B9E,UAAU,CAACL,UAAU,CAACkF,MAAM,CAAC7E,UAAU,CAACrB,GAAG,CAAC;MAC9C,CAAC,CAAC;IACJ,CAAC;IAEDwF,QAAQ,CAACE,IAAI,eACX7G,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAClG,mBAAA,CAAA+G,yBAAyB;MAAChG,GAAG,EAAC;IAAM,gBACnCnB,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAChG,qBAAA,CAAAiH,gBAAgB;MACfC,OAAO,EAAEH,MAAO;MAChBI,iBAAiB,EAAE9E,OAAO,CAAC+E,uBAAwB;MACnDC,SAAS,EAAEhF,OAAO,CAAC0B,eAAgB;MACnCuD,SAAS,EAAEjF,OAAO,CAACyE,eAAgB;MACnCS,KAAK,EAAElF,OAAO,CAACmF,eAAgB;MAC/BC,cAAc,EAAEpF,OAAO,CAACqF,wBAAyB;MACjDC,YAAY,EAAEtF,OAAO,CAAC0C,gBAAiB;MACvC6C,UAAU,EAAEvF,OAAO,CAACgB,oBAAqB;MACzCwE,WAAW,EAAExF,OAAO,CAACyF;MACrB;MAAA;MACAxD,KAAK,EAAEjC,OAAO,CAACmF,eAAgB;MAC/BO,cAAc,EAAE1F,OAAO,CAACqF,wBAAyB;MACjD3C,gBAAgB,EAAE1C,OAAO,CAAC0C,gBAAiB;MAC3CiD,UAAU,EAAE3F,OAAO,CAACgB,oBAAqB;MACzCyE,YAAY,EAAEzF,OAAO,CAACyF,YAAa;MACnCtD,KAAK,EAAEA;IAAM,EACb,CACwB,CAC7B;EACH;EAEA,IAAInC,OAAO,CAAC4F,WAAW,EAAE;IACvB,IAAI3D,KAAK,KAAK6B,SAAS,IAAI,OAAO9D,OAAO,CAAC4F,WAAW,KAAK,QAAQ,EAAE;MAClExD,aAAa,CAACH,KAAK,GAAGjC,OAAO,CAAC4F,WAAW;IAC3C,CAAC,MAAM;MACL5B,QAAQ,CAACE,IAAI,eACX7G,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAClG,mBAAA,CAAAoI,2BAA2B;QAACrH,GAAG,EAAC;MAAQ,GACtCU,sBAAsB,CAACc,OAAO,CAAC4F,WAAW,EAAE;QAAEzD;MAAM,CAAC,CAAC,CAC3B,CAC/B;IACH;EACF;EAEA,IAAInC,OAAO,CAAC8F,WAAW,EAAE;IACvB9B,QAAQ,CAACE,IAAI,eACX7G,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAClG,mBAAA,CAAAsI,0BAA0B;MAACvH,GAAG,EAAC;IAAO,GACpCU,sBAAsB,CAACc,OAAO,CAAC8F,WAAW,EAAE;MAAE3D;IAAM,CAAC,CAAC,CAC5B,CAC9B;EACH;EAEA,IAAI6B,QAAQ,CAAC1F,MAAM,GAAG,CAAC,EAAE;IACvB8D,aAAa,CAAC4B,QAAQ,GAAGA,QAAQ;EACnC;EAEA,oBAAO3G,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAClG,mBAAA,CAAAmG,uBAAuB,EAAKxB,aAAa,CAAI;AACvD;AAEA,MAAM4D,gBAAgB,GAAGC,IAAA,IAqBnB;EAAA,IArBoB;IACxBC,eAAe;IACfC,WAAW;IACX7G,KAAK;IACLE,UAAU;IACV4G,cAAc;IACd3F,KAAK;IACLZ,UAAU;IACVa;EAaF,CAAC,GAAAuF,IAAA;EACC,MAAMI,MAAM,GAAGC,cAAK,CAACC,UAAU,CAACC,iCAAa,CAAC;EAE9C,IAAIN,eAAe,EAAE;IACnB,oBACE7I,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAClG,mBAAA,CAAAgJ,WAAW;MAACC,KAAK,EAAEC,MAAM,CAACC;IAAO,gBAChCvJ,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAC0C,MAAM;MAACK,KAAK,EAAEG,uBAAU,CAACC,YAAa;MAACC,OAAO;MAACC,aAAa;IAAA,GAC1DxG,kBAAkB,CAACC,KAAK,EAAEnB,KAAK,EAAEO,UAAU,EAAEa,gBAAgB,CAAC,eAC/DrD,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAACjG,gBAAA,CAAAuJ,SAAS;MACRd,WAAW,EAAEA,WAAY;MACzB3G,UAAU,EAAEA,UAAW;MACvB0H,SAAS,EAAEd;IAAe,EAC1B,CACK,CACG;EAElB;EACA,oBACE/I,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAACjG,gBAAA,CAAAuJ,SAAS;IACRd,WAAW,EAAEA,WAAY;IACzB3G,UAAU,EAAEA,UAAW;IACvB0H,SAAS,EAAEd;EAAe,EAC1B;AAEN,CAAC;AASD,SAASe,SAASA,CAAAC,KAAA,EAKC;EAAA,IALA;IACjB5H,UAAU;IACV6H,WAAW;IACX3G,gBAAgB;IAChByF;EACc,CAAC,GAAAiB,KAAA;EACf,MAAM;IAAE9G;EAAO,CAAC,GAAGd,UAAU,CAACY,KAAK;EACnC,MAAMiG,MAAM,GAAGC,cAAK,CAACC,UAAU,CAACC,iCAAa,CAAC;EAC9C,oBACEnJ,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAClG,mBAAA,CAAAgJ,WAAW;IACVC,KAAK,EAAEC,MAAM,CAACC,MAAO;IACrBvG,qBAAqB,EAAEA,CAAA,KAAMA,qBAAqB,CAACb,UAAU;EAAE,GAE9Dc,MAAM,CAACgH,GAAG,CAAC,CAAChI,KAAK,EAAEmB,KAAK,KAAK;IAC5B,MAAMZ,UAAU,GAAGwH,WAAW,CAAC/H,KAAK,CAACd,GAAG,CAAC;IACzC,MAAM;MAAE+I,YAAY;MAAEvH;IAAQ,CAAC,GAAGH,UAAU;IAC5C,MAAM2H,mBAAmB,GAAG3H,UAAU,CAACL,UAAU;IACjD,MAAM;MAAEiI,IAAI;MAAEC;IAAgB,CAAC,GAAGhH,gBAAgB;IAClD,MAAM0F,cAAc,GAAGmB,YAAY,EAAE;IAErC,IAAII,iBAAyC,GAAG,MAAM;IAEtD,IAAI3H,OAAO,CAAC2H,iBAAiB,EAAE;MAC7BA,iBAAiB,GAAG3H,OAAO,CAAC2H,iBAAiB;IAC/C,CAAC,MAAM;MACL;MACA,IAAIF,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,gBAAgB,EAAE;QACjDE,iBAAiB,GAAGF,IAAI;QACxB,IAAIC,eAAe,IAAI1H,OAAO,CAAC4H,eAAe,EAAE;UAC9CD,iBAAiB,GACfF,IAAI,KAAK,gBAAgB,GACrB,2BAA2B,GAC3B,kBAAkB;QAC1B;MACF;IACF;IACA,IAAII,cAAc,GAAG7H,OAAO,CAAC6H,cAAc;IAC3C,IAAI7H,OAAO,CAAC8H,gBAAgB,KAAK,KAAK,EAAE;MACtCD,cAAc,GAAG,MAAM;IACzB;IAEA,MAAMpE,SAAS,GACbzD,OAAO,CAACwB,WAAW,KAAK,KAAK,IAC7B,CAAAd,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEC,UAAU,MAAK,MAAM,IACvCX,OAAO,CAAC0D,MAAM,KAAK,IAAI;IAEzB,IACE,CAACzE,OAAO,IACR0I,iBAAiB,KAAK,MAAM,IAC5B3H,OAAO,CAACwB,WAAW,KAAKsC,SAAS,EACjC;MACA7E,OAAO,GAAG,IAAI;MACd8I,OAAO,CAACC,IAAI,CACV,mHAAmH,CACpH;IACH;IAEA,MAAM9B,eAAe,GAAGpH,SAAS,GAC7B,KAAK,GACL6I,iBAAiB,KAAK,MAAM,IAC5BlE,SAAS,IACTzD,OAAO,CAACwB,WAAW,KAAK,IAAI;IAChC,MAAMyG,cAAc,GAAGnJ,SAAS,GAC5B2E,SAAS,GACTkE,iBAAiB,KAAK,MAAM,IAAIlE,SAAS;IAE7C,oBACEpG,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAAC0C,MAAM;MACL7H,GAAG,EAAG,UAASc,KAAK,CAACd,GAAI,EAAE;MAC3BuI,OAAO;MACPC,aAAa;MACbN,KAAK,EAAE,CAACG,uBAAU,CAACC,YAAY,EAAE9G,OAAO,CAACkI,SAAS,CAAE;MACpDL,cAAc,EAAEA,cAAe;MAC/BM,sBAAsB,EAAEnI,OAAO,CAACmI,sBAAuB;MACvDR,iBAAiB,EAAEA,iBAAkB;MACrCS,gBAAgB,EACdpI,OAAO,CAACoI,gBAAgB,KAAKtE,SAAS,GAClC,KAAK,GACL9D,OAAO,CAACoI,gBACb;MACDC,aAAa,EACX5H,KAAK,KAAKjB,UAAU,CAACY,KAAK,CAACE,MAAM,CAAChC,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,MACzD;MACDgK,cAAc,EACZvJ,qBAAQ,CAACC,EAAE,KAAK,SAAS,GACrB,KAAK,GACLgB,OAAO,CAACsI,cAAc,KAAKxE,SAAS,GACpC,IAAI,GACJ9D,OAAO,CAACsI,cACb;MACDC,gCAAgC,EAC9BvI,OAAO,CAACuI,gCACT;MACDC,sBAAsB,EAAExI,OAAO,CAACwI,sBAAuB;MACvDC,iBAAiB,EAAEzI,OAAO,CAACyI,iBAAkB;MAC7CC,kBAAkB,EAAE1I,OAAO,CAAC0I,kBAAmB;MAC/CC,cAAc,EAAE3I,OAAO,CAAC2I,cAAe;MACvCC,eAAe,EAAE5I,OAAO,CAAC4I,eAAgB;MACzCC,cAAc,EAAE7I,OAAO,CAAC6I,cAAe;MACvCC,oBAAoB,EAAE9I,OAAO,CAAC8I,oBAAqB;MACnDlJ,QAAQ,EAAEA,CAAA,KAAMA,QAAQ,CAACN,KAAK,EAAEO,UAAU,EAAE2H,mBAAmB,CAAE;MACjEuB,YAAY,EAAEA,CAAA;QAAA,IAAAC,qBAAA;QAAA,OAAMhJ,OAAO,aAAPA,OAAO,wBAAAgJ,qBAAA,GAAPhJ,OAAO,CAAE+I,YAAY,cAAAC,qBAAA,uBAArBA,qBAAA,CAAArK,IAAA,CAAAqB,OAAO,CAAkB;MAAA,CAAC;MAC9CiJ,eAAe,EAAEA,CAAA;QAAA,IAAAC,qBAAA;QAAA,OAAMlJ,OAAO,aAAPA,OAAO,wBAAAkJ,qBAAA,GAAPlJ,OAAO,CAAEiJ,eAAe,cAAAC,qBAAA,uBAAxBA,qBAAA,CAAAvK,IAAA,CAAAqB,OAAO,CAAqB;MAAA,CAAC;MACpDmJ,WAAW,EAAEA,CAAA;QAAA,IAAAC,oBAAA;QAAA,OAAMpJ,OAAO,aAAPA,OAAO,wBAAAoJ,oBAAA,GAAPpJ,OAAO,CAAEmJ,WAAW,cAAAC,oBAAA,uBAApBA,oBAAA,CAAAzK,IAAA,CAAAqB,OAAO,CAAiB;MAAA,CAAC;MAC5CqJ,yBAAyB,EAAEA,CAAA,KACzBhK,WAAW,CAACC,KAAK,EAAE,CAAC,EAAEkI,mBAAmB,CAC1C;MACD8B,WAAW,EAAGC,CAAC,IACblK,WAAW,CACTC,KAAK,EACLiK,CAAC,CAACC,WAAW,CAACjK,YAAY,EAC1BiI,mBAAmB;IAEtB,GAEAS,cAAc,IACbzH,kBAAkB,CAACC,KAAK,EAAEnB,KAAK,EAAEO,UAAU,EAAEa,gBAAgB,CAAC,eAChErD,MAAA,CAAAS,OAAA,CAAA6F,aAAA,CAACqC,gBAAgB;MACfE,eAAe,EAAEA,eAAgB;MACjCC,WAAW,EAAEA,WAAY;MACzB7G,KAAK,EAAEA,KAAM;MACbE,UAAU,EAAEgI,mBAAoB;MAChCpB,cAAc,EAAEA,cAAe;MAC/B3F,KAAK,EAAEA,KAAM;MACbZ,UAAU,EAAEA,UAAW;MACvBa,gBAAgB,EAAEA;IAAiB,EACnC,CACK;EAEb,CAAC,CAAC,CACU;AAElB;AAEA,MAAMiG,MAAM,GAAGE,uBAAU,CAAC4C,MAAM,CAAC;EAC/B7C,MAAM,EAAE;IAAE8C,IAAI,EAAE;EAAE;AACpB,CAAC,CAAC;AAEF,SAASC,oBAAoBA,CAC3BC,cAGC,EAUD;EAAA,IATAC,WAKC,GAAAxL,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAyF,SAAA,GAAAzF,SAAA,MAAG,CAAC,CAAC;EAKN,MAAMyL,MAAM,GAAG,IAAAC,4BAAW,EAACH,cAAc,EAAEC,WAAW,CAAC;;EAEvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMG,sBAAsB,GAAGF,MAAM,CAACG,iBAAiB;EACvDH,MAAM,CAACG,iBAAiB,GAAG,CACzBC,MAA4D,EAC5D9J,KAAK,KACF;IACH,IAAI8J,MAAM,CAACxK,IAAI,KAAKb,aAAa,EAAE;MACjC,MAAM;QAAEL,GAAG;QAAEmB,SAAS;QAAEJ;MAAa,CAAC,GAAG2K,MAAM;MAC/C,IAAIC,cAAc,GAAG/J,KAAK,CAACK,KAAK;MAChC,IAAIjC,GAAG,EAAE;QACP,MAAM4L,SAAS,GAAGhK,KAAK,CAACE,MAAM,CAAC+J,IAAI,CAChC/K,KAAwC,IAAKA,KAAK,CAACd,GAAG,KAAKA,GAAG,CAChE;QACD2L,cAAc,GAAG/J,KAAK,CAACE,MAAM,CAACgK,OAAO,CAACF,SAAS,CAAC;MAClD;MAEA,IAAID,cAAc,GAAG,CAAC,EAAE;QACtB,MAAMI,SAAS,GAAG,CAAC,GAAGnK,KAAK,CAACE,MAAM,CAAC;QACnC,IAAIf,YAAY,GAAG,CAAC,EAAE;UACpB;UACA;UACA;UACAgL,SAAS,CAACC,MAAM,CAACL,cAAc,GAAG5K,YAAY,GAAG,CAAC,EAAEA,YAAY,CAAC;QACnE,CAAC,MAAM;UACLgL,SAAS,CAACC,MAAM,CAACL,cAAc,EAAE,CAAC,CAAC;QACrC;QAEA,OAAO;UACL,GAAG/J,KAAK;UACRE,MAAM,EAAEiK,SAAS;UACjB9J,KAAK,EAAE8J,SAAS,CAACjM,MAAM,GAAG,CAAC;UAC3BmM,eAAe,EAAE9K,SAAS,KAAK;QACjC,CAAC;MACH;IACF;IACA,OAAOqK,sBAAsB,CAACE,MAAM,EAAsB9J,KAAK,CAAC;EAClE,CAAC;EACD;EACA,OAAO,IAAAsK,gCAAe,EAACvD,SAAS,EAAE2C,MAAM,EAAED,WAAW,CAAC;AACxD;AAAC,IAAAc,QAAA,GAEchB,oBAAoB;AAAAiB,OAAA,CAAA9M,OAAA,GAAA6M,QAAA"}