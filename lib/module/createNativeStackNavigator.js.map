{"version":3,"names":["React","Platform","StyleSheet","ScreenContext","ScreenStack","ScreenStackHeaderBackButtonImage","ScreenStackHeaderCenterView","ScreenStackHeaderConfig","ScreenStackHeaderLeftView","ScreenStackHeaderRightView","ScreenStackHeaderSearchBarView","SearchBar","createNavigator","SceneView","StackActions","StackRouter","HeaderBackButton","REMOVE_ACTION","isAndroid","OS","didWarn","renderComponentOrThunk","componentOrThunk","props","removeScene","route","dismissCount","navigation","dispatch","type","immediate","key","onAppear","descriptor","_descriptor$options","_descriptor$options$o","options","call","completeTransition","toChildKey","state","onFinishTransitioning","routes","lastRoute","length","renderHeaderConfig","index","navigationConfig","headerMode","backButtonInCustomView","direction","disableBackButtonMenu","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerHideBackButton","headerHideShadow","headerLargeStyle","headerLargeTitle","headerLargeTitleHideShadow","headerLargeTitleStyle","headerShown","headerStyle","headerTintColor","headerTitleStyle","headerTopInsetEnabled","headerTranslucent","hideShadow","largeTitle","largeTitleHideShadow","title","translucent","scene","headerOptions","backTitle","backTitleFontFamily","fontFamily","backTitleFontSize","fontSize","backTitleVisible","color","topInsetEnabled","hideBackButton","largeTitleBackgroundColor","backgroundColor","largeTitleColor","largeTitleFontFamily","largeTitleFontSize","largeTitleFontWeight","fontWeight","titleColor","titleFontFamily","titleFontSize","titleFontWeight","hasHeader","header","createElement","_extends","hidden","undefined","blurEffect","children","backButtonImage","push","source","searchBar","headerLeft","headerBackImage","goBack","requestAnimationFrame","onPress","pressColorAndroid","headerPressColorAndroid","tintColor","backImage","label","backButtonTitle","truncatedLabel","truncatedBackButtonTitle","labelVisible","labelStyle","titleLayout","layoutPreset","truncatedTitle","titleStyle","headerTitle","headerRight","MaybeNestedStack","_ref","isHeaderInModal","screenProps","SceneComponent","Screen","useContext","style","styles","scenes","absoluteFill","enabled","isNativeStack","component","StackView","_ref2","descriptors","map","getComponent","routeNavigationProp","mode","transparentCard","stackPresentation","cardTransparent","stackAnimation","animationEnabled","console","warn","isHeaderInPush","cardStyle","customAnimationOnSwipe","replaceAnimation","pointerEvents","gestureEnabled","nativeBackButtonDismissalEnabled","fullScreenSwipeEnabled","screenOrientation","statusBarAnimation","statusBarColor","statusBarHidden","statusBarStyle","statusBarTranslucent","onWillAppear","_options$onWillAppear","onWillDisappear","_options$onWillDisapp","onDisappear","_options$onDisappear","onHeaderBackButtonClicked","onDismissed","e","nativeEvent","create","flex","createStackNavigator","routeConfigMap","stackConfig","arguments","router","superGetStateForAction","getStateForAction","action","backRouteIndex","backRoute","find","indexOf","newRoutes","splice","isTransitioning"],"sources":["createNativeStackNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  Animated,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ScreenContext,\n  ScreenStack,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderConfigProps,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport {\n  createNavigator,\n  SceneView,\n  StackActions,\n  StackRouter,\n  NavigationRouteConfigMap,\n  CreateNavigatorConfig,\n  NavigationStackRouterConfig,\n  NavigationParams,\n  NavigationRoute,\n  NavigationDescriptor,\n  NavigationState,\n  NavigationNavigator,\n  NavigationAction,\n  NavigationProp,\n  NavigationScreenProp,\n} from 'react-navigation';\nimport { NativeStackNavigationOptions as NativeStackNavigationOptionsV5 } from './native-stack/types';\nimport { HeaderBackButton } from 'react-navigation-stack';\nimport {\n  StackNavigationHelpers,\n  StackNavigationProp,\n  Layout,\n} from 'react-navigation-stack/src/vendor/types';\n\nconst REMOVE_ACTION = 'NativeStackNavigator/REMOVE';\n\nconst isAndroid = Platform.OS === 'android';\n\nlet didWarn = isAndroid;\n\nfunction renderComponentOrThunk(componentOrThunk: unknown, props: unknown) {\n  if (typeof componentOrThunk === 'function') {\n    return componentOrThunk(props);\n  }\n  return componentOrThunk;\n}\n\ntype NativeStackRemoveNavigationAction = {\n  type: typeof REMOVE_ACTION;\n  immediate: boolean;\n  dismissCount: number;\n  key?: string;\n};\n\nexport type NativeStackNavigationProp = StackNavigationProp;\n\nexport type NativeStackNavigationOptions = StackNavigatorOptions &\n  NativeStackNavigationOptionsV5 &\n  BackButtonProps & {\n    onWillAppear?: () => void;\n    onAppear?: () => void;\n    onWillDisappear?: () => void;\n    onDisappear?: () => void;\n    // these props differ from the ones used in v5 `native-stack`, and we would like to keep the API consistent between versions\n    /** Use `headerHideShadow` to be consistent with v5 `native-stack` */\n    hideShadow?: boolean;\n    /** Use `headerLargeTitle` to be consistent with v5 `native-stack` */\n    largeTitle?: boolean;\n    /** Use `headerLargeTitleHideShadow` to be consistent with v5 `native-stack` */\n    largeTitleHideShadow?: boolean;\n    /** Use `headerTranslucent` to be consistent with v5 `native-stack` */\n    translucent?: boolean;\n  };\n\n// these are adopted from `stack` navigator\ntype StackNavigatorOptions = {\n  /** This is an option from `stackNavigator` and it hides the header when set to `null`. Use `headerShown` instead to be consistent with v5 `native-stack`. */\n  header?: React.ComponentType<Record<string, unknown>> | null;\n  /** This is an option from `stackNavigator` and it controls the stack presentation along with `mode` prop. Use `stackPresentation` instead to be consistent with v5 `native-stack` */\n  cardTransparent?: boolean;\n  /** This is an option from `stackNavigator` and it sets stack animation to none when `false` passed. Use `stackAnimation: 'none'` instead to be consistent with v5 `native-stack` */\n  animationEnabled?: boolean;\n  cardStyle?: StyleProp<ViewStyle>;\n};\n\n// these are the props used for rendering back button taken from `react-navigation-stack`\ntype BackButtonProps = {\n  headerBackImage?: (props: { tintColor: string }) => React.ReactNode;\n  headerPressColorAndroid?: string;\n  headerTintColor?: string;\n  backButtonTitle?: string;\n  truncatedBackButtonTitle?: string;\n  backTitleVisible?: boolean;\n  headerBackTitleStyle?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n  layoutPreset?: Layout;\n};\n\ntype NativeStackDescriptor = NavigationDescriptor<\n  NavigationParams,\n  NativeStackNavigationOptions\n>;\n\ntype NativeStackDescriptorMap = {\n  [key: string]: NativeStackDescriptor;\n};\n\n// these are the props used for rendering back button taken from `react-navigation-stack`\ntype NativeStackNavigationConfig = {\n  /** This is an option from `stackNavigator` and controls the stack presentation along with `cardTransparent` prop. Use `stackPresentation` instead to be consistent with v5 `native-stack` */\n  mode?: 'modal' | 'containedModal';\n  /** This is an option from `stackNavigator` and makes the header hide when set to `none`. Use `headerShown` instead to be consistent with v5 `native-stack` */\n  headerMode?: 'none';\n  /** This is an option from `stackNavigator` and controls the stack presentation along with `mode` prop. Use `stackPresentation` instead to be consistent with v5 `native-stack` */\n  transparentCard?: boolean;\n};\n\nfunction removeScene(\n  route: NavigationRoute<NavigationParams>,\n  dismissCount: number,\n  navigation: StackNavigationHelpers\n) {\n  navigation.dispatch({\n    // @ts-ignore special navigation action for native stack\n    type: REMOVE_ACTION,\n    immediate: true,\n    key: route.key,\n    dismissCount,\n  });\n}\n\nfunction onAppear(\n  route: NavigationRoute<NavigationParams>,\n  descriptor: NativeStackDescriptor,\n  navigation: StackNavigationHelpers\n) {\n  descriptor.options?.onAppear?.();\n  navigation.dispatch(\n    StackActions.completeTransition({\n      toChildKey: route.key,\n      key: navigation.state.key,\n    })\n  );\n}\n\nfunction onFinishTransitioning(navigation: StackNavigationHelpers) {\n  const { routes } = navigation.state;\n  const lastRoute = routes?.length && routes[routes.length - 1];\n\n  if (lastRoute) {\n    navigation.dispatch(\n      StackActions.completeTransition({\n        toChildKey: lastRoute.key,\n        key: navigation.state.key,\n      })\n    );\n  }\n}\n\nfunction renderHeaderConfig(\n  index: number,\n  route: NavigationRoute<NavigationParams>,\n  descriptor: NativeStackDescriptor,\n  navigationConfig: NativeStackNavigationConfig\n) {\n  const { options } = descriptor;\n  const { headerMode } = navigationConfig;\n\n  const {\n    backButtonInCustomView,\n    direction,\n    disableBackButtonMenu,\n    headerBackTitle,\n    headerBackTitleStyle,\n    headerBackTitleVisible,\n    headerHideBackButton,\n    headerHideShadow,\n    headerLargeStyle,\n    headerLargeTitle,\n    headerLargeTitleHideShadow,\n    headerLargeTitleStyle,\n    headerShown,\n    headerStyle,\n    headerTintColor,\n    headerTitleStyle,\n    headerTopInsetEnabled = true,\n    headerTranslucent,\n    hideShadow,\n    largeTitle,\n    largeTitleHideShadow,\n    title,\n    translucent,\n  } = options;\n\n  const scene = {\n    index,\n    key: route.key,\n    route,\n    descriptor,\n  };\n\n  const headerOptions: ScreenStackHeaderConfigProps = {\n    backButtonInCustomView,\n    backTitle: headerBackTitle,\n    backTitleFontFamily: headerBackTitleStyle?.fontFamily,\n    backTitleFontSize: headerBackTitleStyle?.fontSize,\n    backTitleVisible: headerBackTitleVisible,\n    color: headerTintColor,\n    direction,\n    disableBackButtonMenu,\n    topInsetEnabled: headerTopInsetEnabled,\n    hideBackButton: headerHideBackButton,\n    hideShadow: headerHideShadow || hideShadow,\n    largeTitle: headerLargeTitle || largeTitle,\n    largeTitleBackgroundColor:\n      headerLargeStyle?.backgroundColor ||\n      // @ts-ignore old implementation, will not be present in TS API, but can be used here\n      headerLargeTitleStyle?.backgroundColor,\n    largeTitleColor: headerLargeTitleStyle?.color,\n    largeTitleFontFamily: headerLargeTitleStyle?.fontFamily,\n    largeTitleFontSize: headerLargeTitleStyle?.fontSize,\n    largeTitleFontWeight: headerLargeTitleStyle?.fontWeight,\n    largeTitleHideShadow: largeTitleHideShadow || headerLargeTitleHideShadow,\n    title,\n    titleColor: headerTitleStyle?.color || headerTintColor,\n    titleFontFamily: headerTitleStyle?.fontFamily,\n    titleFontSize: headerTitleStyle?.fontSize,\n    titleFontWeight: headerTitleStyle?.fontWeight,\n    translucent: headerTranslucent || translucent || false,\n  };\n\n  const hasHeader =\n    headerShown !== false && headerMode !== 'none' && options.header !== null;\n  if (!hasHeader) {\n    return <ScreenStackHeaderConfig {...headerOptions} hidden />;\n  }\n\n  if (headerStyle !== undefined) {\n    headerOptions.backgroundColor = headerStyle.backgroundColor;\n    headerOptions.blurEffect = headerStyle.blurEffect;\n  }\n\n  const children = [];\n\n  if (options.backButtonImage) {\n    children.push(\n      <ScreenStackHeaderBackButtonImage\n        key=\"backImage\"\n        source={options.backButtonImage}\n      />\n    );\n  }\n\n  if (Platform.OS === 'ios' && options.searchBar) {\n    children.push(\n      <ScreenStackHeaderSearchBarView>\n        <SearchBar {...options.searchBar} />\n      </ScreenStackHeaderSearchBarView>\n    );\n  }\n\n  if (options.headerLeft !== undefined) {\n    children.push(\n      <ScreenStackHeaderLeftView key=\"left\">\n        {renderComponentOrThunk(options.headerLeft, { scene })}\n      </ScreenStackHeaderLeftView>\n    );\n  } else if (options.headerBackImage !== undefined) {\n    const goBack = () => {\n      // Go back on next tick because button ripple effect needs to happen on Android\n      requestAnimationFrame(() => {\n        descriptor.navigation.goBack(descriptor.key);\n      });\n    };\n\n    children.push(\n      <ScreenStackHeaderLeftView key=\"left\">\n        <HeaderBackButton\n          onPress={goBack}\n          pressColorAndroid={options.headerPressColorAndroid}\n          tintColor={options.headerTintColor}\n          backImage={options.headerBackImage}\n          label={options.backButtonTitle}\n          truncatedLabel={options.truncatedBackButtonTitle}\n          labelVisible={options.backTitleVisible}\n          labelStyle={options.headerBackTitleStyle}\n          titleLayout={options.layoutPreset}\n          // @ts-ignore old props kept for very old version of `react-navigation-stack`\n          title={options.backButtonTitle}\n          truncatedTitle={options.truncatedBackButtonTitle}\n          backTitleVisible={options.backTitleVisible}\n          titleStyle={options.headerBackTitleStyle}\n          layoutPreset={options.layoutPreset}\n          scene={scene}\n        />\n      </ScreenStackHeaderLeftView>\n    );\n  }\n\n  if (options.headerTitle) {\n    if (title === undefined && typeof options.headerTitle === 'string') {\n      headerOptions.title = options.headerTitle;\n    } else {\n      children.push(\n        <ScreenStackHeaderCenterView key=\"center\">\n          {renderComponentOrThunk(options.headerTitle, { scene })}\n        </ScreenStackHeaderCenterView>\n      );\n    }\n  }\n\n  if (options.headerRight) {\n    children.push(\n      <ScreenStackHeaderRightView key=\"right\">\n        {renderComponentOrThunk(options.headerRight, { scene })}\n      </ScreenStackHeaderRightView>\n    );\n  }\n\n  if (children.length > 0) {\n    headerOptions.children = children;\n  }\n\n  return <ScreenStackHeaderConfig {...headerOptions} />;\n}\n\nconst MaybeNestedStack = ({\n  isHeaderInModal,\n  screenProps,\n  route,\n  navigation,\n  SceneComponent,\n  index,\n  descriptor,\n  navigationConfig,\n}: {\n  isHeaderInModal: boolean;\n  screenProps: unknown;\n  route: NavigationRoute<NavigationParams>;\n  navigation: NavigationScreenProp<\n    NavigationRoute<NavigationParams>,\n    NavigationParams\n  >;\n  SceneComponent: React.ComponentType<Record<string, unknown>>;\n  index: number;\n  descriptor: NativeStackDescriptor;\n  navigationConfig: NativeStackNavigationConfig;\n}) => {\n  const Screen = React.useContext(ScreenContext);\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.scenes}>\n        <Screen style={StyleSheet.absoluteFill} enabled isNativeStack>\n          {renderHeaderConfig(index, route, descriptor, navigationConfig)}\n          <SceneView\n            screenProps={screenProps}\n            navigation={navigation}\n            component={SceneComponent}\n          />\n        </Screen>\n      </ScreenStack>\n    );\n  }\n  return (\n    <SceneView\n      screenProps={screenProps}\n      navigation={navigation}\n      component={SceneComponent}\n    />\n  );\n};\n\ntype StackViewProps = {\n  navigation: StackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n  navigationConfig: NativeStackNavigationConfig;\n  screenProps: unknown;\n};\n\nfunction StackView({\n  navigation,\n  descriptors,\n  navigationConfig,\n  screenProps,\n}: StackViewProps) {\n  const { routes } = navigation.state;\n  const Screen = React.useContext(ScreenContext);\n  return (\n    <ScreenStack\n      style={styles.scenes}\n      onFinishTransitioning={() => onFinishTransitioning(navigation)}\n    >\n      {routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const { getComponent, options } = descriptor;\n        const routeNavigationProp = descriptor.navigation;\n        const { mode, transparentCard } = navigationConfig;\n        const SceneComponent = getComponent();\n\n        let stackPresentation: StackPresentationTypes = 'push';\n\n        if (options.stackPresentation) {\n          stackPresentation = options.stackPresentation;\n        } else {\n          // this shouldn't be used because we have a prop for that\n          if (mode === 'modal' || mode === 'containedModal') {\n            stackPresentation = mode;\n            if (transparentCard || options.cardTransparent) {\n              stackPresentation =\n                mode === 'containedModal'\n                  ? 'containedTransparentModal'\n                  : 'transparentModal';\n            }\n          }\n        }\n        let stackAnimation = options.stackAnimation;\n        if (options.animationEnabled === false) {\n          stackAnimation = 'none';\n        }\n\n        const hasHeader =\n          options.headerShown !== false &&\n          navigationConfig?.headerMode !== 'none' &&\n          options.header !== null;\n\n        if (\n          !didWarn &&\n          stackPresentation !== 'push' &&\n          options.headerShown !== undefined\n        ) {\n          didWarn = true;\n          console.warn(\n            'Be aware that changing the visibility of header in modal on iOS will result in resetting the state of the screen.'\n          );\n        }\n\n        const isHeaderInModal = isAndroid\n          ? false\n          : stackPresentation !== 'push' &&\n            hasHeader &&\n            options.headerShown === true;\n        const isHeaderInPush = isAndroid\n          ? hasHeader\n          : stackPresentation === 'push' && hasHeader;\n\n        return (\n          <Screen\n            key={`screen_${route.key}`}\n            enabled\n            isNativeStack\n            style={[StyleSheet.absoluteFill, options.cardStyle]}\n            stackAnimation={stackAnimation}\n            customAnimationOnSwipe={options.customAnimationOnSwipe}\n            stackPresentation={stackPresentation}\n            replaceAnimation={\n              options.replaceAnimation === undefined\n                ? 'pop'\n                : options.replaceAnimation\n            }\n            pointerEvents={\n              index === navigation.state.routes.length - 1 ? 'auto' : 'none'\n            }\n            gestureEnabled={\n              Platform.OS === 'android'\n                ? false\n                : options.gestureEnabled === undefined\n                ? true\n                : options.gestureEnabled\n            }\n            nativeBackButtonDismissalEnabled={\n              options.nativeBackButtonDismissalEnabled\n            }\n            fullScreenSwipeEnabled={options.fullScreenSwipeEnabled}\n            screenOrientation={options.screenOrientation}\n            statusBarAnimation={options.statusBarAnimation}\n            statusBarColor={options.statusBarColor}\n            statusBarHidden={options.statusBarHidden}\n            statusBarStyle={options.statusBarStyle}\n            statusBarTranslucent={options.statusBarTranslucent}\n            onAppear={() => onAppear(route, descriptor, routeNavigationProp)}\n            onWillAppear={() => options?.onWillAppear?.()}\n            onWillDisappear={() => options?.onWillDisappear?.()}\n            onDisappear={() => options?.onDisappear?.()}\n            onHeaderBackButtonClicked={() =>\n              removeScene(route, 1, routeNavigationProp)\n            }\n            onDismissed={(e) =>\n              removeScene(\n                route,\n                e.nativeEvent.dismissCount,\n                routeNavigationProp\n              )\n            }\n          >\n            {isHeaderInPush &&\n              renderHeaderConfig(index, route, descriptor, navigationConfig)}\n            <MaybeNestedStack\n              isHeaderInModal={isHeaderInModal}\n              screenProps={screenProps}\n              route={route}\n              navigation={routeNavigationProp}\n              SceneComponent={SceneComponent}\n              index={index}\n              descriptor={descriptor}\n              navigationConfig={navigationConfig}\n            />\n          </Screen>\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nconst styles = StyleSheet.create({\n  scenes: { flex: 1 },\n});\n\nfunction createStackNavigator(\n  routeConfigMap: NavigationRouteConfigMap<\n    NativeStackNavigationOptions,\n    StackNavigationProp\n  >,\n  stackConfig: CreateNavigatorConfig<\n    NativeStackNavigationConfig,\n    NavigationStackRouterConfig,\n    NativeStackNavigationOptions,\n    StackNavigationProp\n  > = {}\n): NavigationNavigator<\n  Record<string, unknown>,\n  NavigationProp<NavigationState>\n> {\n  const router = StackRouter(routeConfigMap, stackConfig);\n\n  // below we override getStateForAction method in order to add handling for\n  // a custom native stack navigation action. The action REMOVE that we want to\n  // add works in a similar way to POP, but it does not remove all the routes\n  // that sit on top of the removed route. For example if we have three routes\n  // [a,b,c] and call POP on b, then both b and c will go away. In case we\n  // call REMOVE on b, only b will be removed from the stack and the resulting\n  // state will be [a, c]\n  const superGetStateForAction = router.getStateForAction;\n  router.getStateForAction = (\n    action: NavigationAction | NativeStackRemoveNavigationAction,\n    state\n  ) => {\n    if (action.type === REMOVE_ACTION) {\n      const { key, immediate, dismissCount } = action;\n      let backRouteIndex = state.index;\n      if (key) {\n        const backRoute = state.routes.find(\n          (route: NavigationRoute<NavigationParams>) => route.key === key\n        );\n        backRouteIndex = state.routes.indexOf(backRoute);\n      }\n\n      if (backRouteIndex > 0) {\n        const newRoutes = [...state.routes];\n        if (dismissCount > 1) {\n          // when dismissing with iOS 14 native header back button, we can pop more than 1 screen at a time\n          // and the `backRouteIndex` is the index of the previous screen. Since we are starting already\n          // on the previous screen, we add 1 to start.\n          newRoutes.splice(backRouteIndex - dismissCount + 1, dismissCount);\n        } else {\n          newRoutes.splice(backRouteIndex, 1);\n        }\n\n        return {\n          ...state,\n          routes: newRoutes,\n          index: newRoutes.length - 1,\n          isTransitioning: immediate !== true,\n        };\n      }\n    }\n    return superGetStateForAction(action as NavigationAction, state);\n  };\n  // Create a navigator with StackView as the view\n  return createNavigator(StackView, router, stackConfig);\n}\n\nexport default createStackNavigator;\n"],"mappings":"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"}